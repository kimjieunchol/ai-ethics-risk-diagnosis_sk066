import requests
from bs4 import BeautifulSoup
import json
import time
from pathlib import Path
from typing import Dict, List
import re

class GuidelineCrawler:
    """AI 윤리 가이드라인 크롤러"""
    
    def __init__(self, output_dir: str = "data"):
        self.output_dir = Path(output_dir)
        self.output_dir.mkdir(exist_ok=True)
        self.headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
    
    def crawl_eu_ai_act(self) -> Dict:
        """EU AI Act 가이드라인 크롤링"""
        print("Crawling EU AI Act...")
        
        # EU AI Act 주요 내용 (공식 요약본 기반)
        eu_content = {
            "source": "EU AI Act",
            "url": "https://artificialintelligenceact.eu/",
            "sections": [
                {
                    "title": "High-Risk AI Systems",
                    "content": """
                    High-risk AI systems are defined as AI systems that pose significant risks to 
                    health, safety, or fundamental rights. These include:
                    - Biometric identification and categorization
                    - Management of critical infrastructure
                    - Educational and vocational training
                    - Employment, worker management
                    - Access to essential services
                    - Law enforcement
                    - Migration, asylum and border control
                    - Administration of justice
                    
                    Requirements for high-risk systems:
                    - Risk management system
                    - Data governance and management
                    - Technical documentation
                    - Record-keeping and logging
                    - Transparency and user information
                    - Human oversight
                    - Accuracy, robustness, and cybersecurity
                    """
                },
                {
                    "title": "Prohibited AI Practices",
                    "content": """
                    The following AI practices are prohibited:
                    - Subliminal manipulation causing harm
                    - Exploitation of vulnerabilities of specific groups
                    - Social scoring by public authorities
                    - Real-time biometric identification in public spaces (with exceptions)
                    """
                },
                {
                    "title": "Transparency Requirements",
                    "content": """
                    AI systems must meet transparency obligations:
                    - Users must be informed when interacting with AI
                    - Content generated by AI must be labeled
                    - Deep fakes must be disclosed
                    - Emotion recognition systems must inform users
                    """
                },
                {
                    "title": "Risk Management",
                    "content": """
                    Providers must establish a risk management system consisting of:
                    - Identification and analysis of known and foreseeable risks
                    - Estimation and evaluation of risks
                    - Evaluation of other possibly arising risks
                    - Adoption of suitable risk management measures
                    """
                }
            ]
        }
        
        # 실제 웹사이트에서 추가 정보 크롤링 시도
        try:
            response = requests.get(
                "https://artificialintelligenceact.eu/the-act/",
                headers=self.headers,
                timeout=10
            )
            if response.status_code == 200:
                soup = BeautifulSoup(response.content, 'html.parser')
                # 추가 콘텐츠 파싱 로직
                articles = soup.find_all(['article', 'section', 'div'], class_=re.compile('content|article'))
                if articles:
                    additional_content = []
                    for article in articles[:5]:  # 처음 5개만
                        text = article.get_text(strip=True)
                        if len(text) > 100:
                            additional_content.append(text[:500])
                    if additional_content:
                        eu_content['additional_info'] = additional_content
        except Exception as e:
            print(f"Additional crawling failed: {e}")
        
        return eu_content
    
    def crawl_unesco_guidelines(self) -> Dict:
        """UNESCO AI Ethics 가이드라인 크롤링"""
        print("Crawling UNESCO Guidelines...")
        
        unesco_content = {
            "source": "UNESCO Recommendation on the Ethics of AI",
            "url": "https://www.unesco.org/en/artificial-intelligence/recommendation-ethics",
            "sections": [
                {
                    "title": "Core Values",
                    "content": """
                    UNESCO identifies core values for ethical AI:
                    - Human rights and human dignity
                    - Living in peaceful, just and interconnected societies
                    - Ensuring diversity and inclusiveness
                    - Environment and ecosystem flourishing
                    """
                },
                {
                    "title": "Key Principles",
                    "content": """
                    1. Proportionality and Do No Harm
                    2. Safety and Security
                    3. Fairness and Non-discrimination
                    4. Sustainability
                    5. Right to Privacy and Data Protection
                    6. Human Oversight and Determination
                    7. Transparency and Explainability
                    8. Responsibility and Accountability
                    9. Awareness and Literacy
                    10. Multi-stakeholder and Adaptive Governance
                    """
                },
                {
                    "title": "Policy Actions - Ethical Impact Assessment",
                    "content": """
                    Member States should implement ethical impact assessments:
                    - Assess potential benefits and risks
                    - Evaluate impacts on human rights and fundamental freedoms
                    - Consider impacts on environment and society
                    - Monitor and evaluate AI systems throughout their lifecycle
                    - Establish clear accountability mechanisms
                    """
                },
                {
                    "title": "Data Governance",
                    "content": """
                    Data governance frameworks should ensure:
                    - Quality and integrity of data
                    - Protection of privacy
                    - Access and data sharing protocols
                    - Data sovereignty considerations
                    - Prevention of harmful bias in datasets
                    """
                }
            ]
        }
        
        # 실제 UNESCO 웹사이트 크롤링 시도
        try:
            response = requests.get(
                "https://www.unesco.org/en/artificial-intelligence/recommendation-ethics",
                headers=self.headers,
                timeout=10
            )
            if response.status_code == 200:
                soup = BeautifulSoup(response.content, 'html.parser')
                # 주요 콘텐츠 추출
                content_divs = soup.find_all(['div', 'section'], class_=re.compile('content|text|body'))
                if content_divs:
                    additional_content = []
                    for div in content_divs[:3]:
                        text = div.get_text(strip=True)
                        if len(text) > 100:
                            additional_content.append(text[:500])
                    if additional_content:
                        unesco_content['additional_info'] = additional_content
        except Exception as e:
            print(f"UNESCO crawling failed: {e}")
        
        return unesco_content
    
    def crawl_oecd_principles(self) -> Dict:
        """OECD AI Principles 크롤링"""
        print("Crawling OECD Principles...")
        
        oecd_content = {
            "source": "OECD AI Principles",
            "url": "https://oecd.ai/en/ai-principles",
            "sections": [
                {
                    "title": "Five Principles for Responsible AI",
                    "content": """
                    1. Inclusive Growth, Sustainable Development and Well-being
                       - AI should benefit people and the planet
                       - Drive inclusive growth and sustainable development
                       - Enhance well-being
                    
                    2. Human-centered Values and Fairness
                       - Respect rule of law, human rights, and democratic values
                       - Include fairness, non-discrimination
                       - Promote diversity and inclusion
                    
                    3. Transparency and Explainability
                       - AI systems should be transparent
                       - People should understand AI-based outcomes
                       - Ability to challenge outcomes
                    
                    4. Robustness, Security and Safety
                       - AI systems must function appropriately
                       - Should not pose unreasonable safety risks
                       - Be secure against attacks
                    
                    5. Accountability
                       - Organizations deploying AI should be accountable
                       - Mechanisms should be in place for responsibility
                    """
                },
                {
                    "title": "Recommendations for Policy Makers",
                    "content": """
                    National policies and international cooperation should:
                    - Invest in AI research and development
                    - Foster digital ecosystem for AI
                    - Create policy environment for AI deployment
                    - Build human capacity and prepare for labor market transformation
                    - Ensure international cooperation for responsible AI
                    """
                },
                {
                    "title": "Risk Management Framework",
                    "content": """
                    Organizations should implement:
                    - Risk assessment and management processes
                    - Due diligence throughout AI system lifecycle
                    - Impact assessments before deployment
                    - Continuous monitoring and evaluation
                    - Incident response procedures
                    """
                }
            ]
        }
        
        # OECD 웹사이트 크롤링 시도
        try:
            response = requests.get(
                "https://oecd.ai/en/ai-principles",
                headers=self.headers,
                timeout=10
            )
            if response.status_code == 200:
                soup = BeautifulSoup(response.content, 'html.parser')
                principles = soup.find_all(['div', 'section'], class_=re.compile('principle|content'))
                if principles:
                    additional_content = []
                    for principle in principles[:5]:
                        text = principle.get_text(strip=True)
                        if len(text) > 50:
                            additional_content.append(text[:500])
                    if additional_content:
                        oecd_content['additional_info'] = additional_content
        except Exception as e:
            print(f"OECD crawling failed: {e}")
        
        return oecd_content
    
    def save_guidelines(self, data: Dict, filename: str):
        """가이드라인을 JSON 파일로 저장"""
        filepath = self.output_dir / filename
        with open(filepath, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        print(f"Saved to {filepath}")
    
    def crawl_all(self):
        """모든 가이드라인 크롤링 및 저장"""
        print("Starting guideline collection...")
        
        # EU AI Act
        eu_data = self.crawl_eu_ai_act()
        self.save_guidelines(eu_data, "eu_ai_act.json")
        time.sleep(2)
        
        # UNESCO
        unesco_data = self.crawl_unesco_guidelines()
        self.save_guidelines(unesco_data, "unesco_ethics.json")
        time.sleep(2)
        
        # OECD
        oecd_data = self.crawl_oecd_principles()
        self.save_guidelines(oecd_data, "oecd_principles.json")
        
        print("\n✓ All guidelines collected successfully!")
        return {
            "eu_ai_act": eu_data,
            "unesco": unesco_data,
            "oecd": oecd_data
        }


if __name__ == "__main__":
    crawler = GuidelineCrawler()
    crawler.crawl_all()